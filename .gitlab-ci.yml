stages:
  - build
  - push
  - deploy

variables:
  # Configuration de ton registre Docker
  REGISTRY: "10.2.0.106:5001"
  IMAGE_NAME: "harvester"
  TAG: "latest"
  SSH_USER: "user"  # Remplace par ton utilisateur SSH
  SSH_HOST: "192.168.1.100"  # Remplace par l'adresse IP de ton serveur de déploiement
  SSH_PRIVATE_KEY: "/path/to/your/private_key"  # Remplace par le chemin de ta clé privée SSH

# Étape de build
build:
  stage: build
  script:
    - docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

# Étape de push (pousser l'image vers le registre Docker)
push:
  stage: push
  script:
    - docker push $REGISTRY/$IMAGE_NAME:$TAG
  only:
    - main  # Pousser l'image uniquement si on est sur la branche 'main' (ou 'master')

# Étape de déploiement via SSH
deploy:
  stage: deploy
  script:
    - echo "Déploiement de l'image Docker sur le serveur distant"
    # Connecte-toi en SSH et effectue le déploiement
    - ssh -i $SSH_PRIVATE_KEY julien@10.2.0.106 "docker pull $REGISTRY/$IMAGE_NAME:$TAG && docker stop harvester || true && docker rm harvester || true && docker run -d --name harvester $REGISTRY/$IMAGE_NAME:$TAG"
  only:
    - main  # Déployer uniquement si on est sur la branche 'main'
  before_script:
    - apt-get update -y && apt-get install -y openssh-client  # Installer le client SSH si nécessaire
  # Assure-toi que la clé privée SSH est ajoutée aux variables GitLab sous CI/CD secrets (en tant que SSH_PRIVATE_KEY)
